@model Xlns.BusBook.UI.Web.Models.LocationPartialView
<div style="@Model.CssStyleForDataFieldDiv">
        @if (Model.ShowDataFieldLegend)
        {
            <div class="fieldsetStyle">Locazione geografica</div>
            <br />
        }
        <div class="labelizer">
            @Html.LabelFor(model => model.Location.City)
        </div>
        <div>
            @Html.TextBoxFor(model => model.Location.City, new { onblur = "refineLocation()" })
            @Html.ValidationMessageFor(model => model.Location.City)
        </div>
        <div class="labelizer">
            @Html.LabelFor(model => model.Location.Street)
        </div>
        <div>
            @Html.TextBoxFor(model => model.Location.Street, new { onblur = "refineLocation()" })
            @Html.ValidationMessageFor(model => model.Location.Street)
        </div>
        <div class="labelizer">
            @Html.LabelFor(model => model.Location.Number)
        </div>
        <div>
            @Html.TextBoxFor(model => model.Location.Number, new { onblur = "refineLocation()" })
            @Html.ValidationMessageFor(model => model.Location.Number)
        </div>
        <div class="labelizer">
            @Html.LabelFor(model => model.Location.CAP)
        </div>
        <div>
            @Html.TextBoxFor(model => model.Location.CAP, new { onblur = "refineLocation()" })
            @Html.ValidationMessageFor(model => model.Location.CAP)
        </div>
        <div class="labelizer">
            @Html.LabelFor(model => model.Location.Province)
        </div>
        <div>
            @Html.TextBoxFor(model => model.Location.Province, new { onblur = "refineLocation()" })
            @Html.ValidationMessageFor(model => model.Location.Province)
        </div>
        <div class="labelizer">
            @Html.LabelFor(model => model.Location.Region)
        </div>
        <div>
            @Html.TextBoxFor(model => model.Location.Region, new { onblur = "refineLocation()" })
            @Html.ValidationMessageFor(model => model.Location.Region)
        </div>
        <div class="labelizer">
            @Html.LabelFor(model => model.Location.Nation)
        </div>
        <div>
            @Html.TextBoxFor(model => model.Location.Nation, new { onblur = "refineLocation()" })
            @Html.ValidationMessageFor(model => model.Location.Nation)
        </div>
        @Html.HiddenFor(model => model.Location.Lat)
        @Html.HiddenFor(model => model.Location.Lng)
</div>
<div style="@Model.CssStyleForMapDiv">
    <div class="fieldsetStyle">
        Cerca indirizzo
    </div>
    <div>
        <input type="text" id="searchAddressField" style="width: 200px" />
        <input type="button" id="searchAddressButton" onclick="showLocation(searchAddressField.value, true);"
            value="cerca" class="read-more" />
    </div>
    <div style="height: 20px">
        <span id="loaderMessage"></span>
    </div>
    <div id="map_canvas" style="margin-top:20px; border: 3px solid black; width: @(Model.MapWidth); height: @(Model.MapHeight);">    
    </div>
</div>

@if (!Model.MapJsAlreadyLoaded)
{    
    <script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false"></script>
}
<script type="text/javascript" src="@Url.Content("~/Content/scripts/location.edit.js")"></script>
