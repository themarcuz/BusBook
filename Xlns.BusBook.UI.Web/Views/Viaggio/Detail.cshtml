@using Xlns.BusBook.UI.Web.Models;
@using Xlns.BusBook.Core.Model;
@model Xlns.BusBook.Core.Model.Viaggio           
@{
    ViewBag.Title = Model.Nome;
    var agenzia = HttpContext.Current.Session.getLoggedAgenzia();
}
@section head{
    <link href="@Url.Content("~/Content/tiledList.css")" rel="stylesheet" type="text/css" media="screen"/>
}
@section scripts{
    <script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false"></script>
    <script type="text/javascript" src="@Url.Content("~/Content/scripts/viaggio.detail.js")"></script>
}
<div id="content-wrapper" class="container_16">
    <div id="main" class="grid_18">
        <div class="grid_6 alpha">
            <h3 style="padding-bottom: 0px">@Model.Nome</h3>
            <h4 style="padding-top: 0px" class="tileSubTitle">
                @Html.DisplayFor(model => model.Descrizione)
            </h4>
            <br />
            <fieldset>
                @Html.LabelFor(model => model.DataPartenza)
                <div>
                    @Html.DisplayFor(model => model.DataPartenza)
                </div>
                @Html.LabelFor(model => model.TotalePosti)
                <div>
                    @Html.DisplayFor(model => model.TotalePosti)
                </div>
                @Html.LabelFor(model => model.DataChiusuraPrenotazioni)
                <div>
                    @Html.DisplayFor(model => model.DataChiusuraPrenotazioni)
                </div>
                @if (Model.DataPubblicazione.HasValue)
                {
                    @Html.LabelFor(model => model.DataPubblicazione)
                    <div>
                        @Html.DisplayFor(model => model.DataPubblicazione)
                    </div>
                }
                @if (Model.Tappe != null && Model.Tappe.Count > 0)
                {
                    if (Model.Tappe != null
                        && Model.Tappe.Where(t => t.Tipo == Xlns.BusBook.Core.Model.TipoTappa.PARTENZA) != null
                        && Model.Tappe.Where(t => t.Tipo == Xlns.BusBook.Core.Model.TipoTappa.PARTENZA).Count() > 0)
                    {
                    <div>
                        <label>
                            Partenza</label>
                    </div>
                    <div>
                        @Html.DisplayFor(model => model.Tappe
                                    .Where(t => t.Tipo == Xlns.BusBook.Core.Model.TipoTappa.PARTENZA)
                                    .OrderBy(t => t.Ordinamento)
                                    .First()
                                    .Location.City)
                    </div>
                    }
                    if (Model.Tappe != null
                        && Model.Tappe.Where(t => t.Tipo == Xlns.BusBook.Core.Model.TipoTappa.DESTINAZIONE) != null
                        && Model.Tappe.Where(t => t.Tipo == Xlns.BusBook.Core.Model.TipoTappa.DESTINAZIONE).Count() > 0)
                    {
                    <div>
                        <label>
                            Destinazione</label>
                    </div>
                    <div>
                        @Html.DisplayFor(model => model.Tappe
                                    .Where(t => t.Tipo == Xlns.BusBook.Core.Model.TipoTappa.DESTINAZIONE)
                                    .OrderByDescending(t => t.Ordinamento)
                                    .First()
                                    .Location.City)
                    </div>
                    }
                    <div style="margin-top: 10px">
                        @{Html.RenderAction("ListaPartecipanti", new { idViaggio = Model.Id });
                        }
                    </div>
                    <div style="display: none">
                        @foreach (var tappa in Model.Tappe)
                        {
                            <div class="tappaLocationInfo" data-tappa-id="@tappa.Id">
                                @Html.TextBox(String.Format("tbTappa{0}Lat", tappa.Id), tappa.Location.Lat)
                                @Html.TextBox(String.Format("tbTappa{0}Lng", tappa.Id), tappa.Location.Lng)
                            </div>
                        }
                    </div>
                }
            </fieldset>
        </div>
        <div class="grid_8 omega">
            <div style="height: 40px">
                <span id="loaderMessage"></span>
            </div>
            <div id="map_canvas" style="width: 500px; height: 350px;">
            </div>
        </div>
    </div>
    <div class="grid_16">
        <p>
            @Html.ActionLink("Torna alla lista", "List", null, new { @class = "button" })
            @if (agenzia != null //si rappresenta un'agenzia
                && Model.Agenzia.Id == agenzia.Id //il viaggio è della propria agenzia
                && !Model.DataPubblicazione.HasValue //il viaggio non è pubblicato
                )
            {        
                @Html.ActionLink("Modifica", "Edit", new { id = Model.Id }, new { @class = "button" })
                <text></text>         
            }  
           
            @if (!Model.DataPubblicazione.HasValue) 
            {
                Ajax.ActionLink("Pubblica", "Pubblica", "Viaggio", new { idViaggio = Model.Id },
                                   new AjaxOptions()
                                   {
                                       Confirm = "Una volta pubblicato il viaggio non sarà più possibile modificarlo: sicuro di voler continuare con la pubblicazione?",
                                       HttpMethod = "POST",
                                       OnSuccess = "OnSuccess",
                                       OnFailure = "PubblicaError"
                                   },
                                   new { @class = "button" });
            }
           
            

            @if (Model.DataChiusuraPrenotazioni > DateTime.Now)
            {
                if (ViewBag.HasPartecipated == false)
                {
                @Ajax.ActionLink("Partecipa", "RichiestaPartecipazione", "Viaggio", new { idViaggio = Model.Id },
                                    new AjaxOptions()
                                    {
                                        Confirm = "",
                                        HttpMethod = "POST",
                                        OnSuccess = "OnSuccess",
                                        OnFailure = "PubblicaError"
                                    },
                                    new { @class = "button" })
                }
                else
                {
                @Ajax.ActionLink("Rimuovi partecipazione", "RimuoviPartecipazione", "Viaggio", new { idViaggio = Model.Id },
                                    new AjaxOptions()
                                    {
                                        Confirm = "",
                                        HttpMethod = "POST",
                                        OnSuccess = "OnSuccess",
                                        OnFailure = "PubblicaError"
                                    },
                                    new { @class = "button" })
                }
            }
            else
            {
                <br />
                @Html.Label("Le partecipazioni a questo viaggio sono già chiuse")
            }
            <br />
            <br />
            <a href="#" onclick="publishWallPost(); return false;">
                <img src="@Url.Content("~/Content/img/facebook.png")" alt="Share on Facebook" /></a>
            <img src="@Url.Content("~/Content/img/twitter.png")" alt="Share on twitter"/>
            <script type="text/javascript">
                function publishWallPost() {
                    var date = ('@Model.DataPartenza.Date.ToString("dd MMM yyyy")');
                    var nomeViaggio = '@Model.Nome';
                    var descrizione = '@Model.Descrizione';
                    var attachment = { 'name': nomeViaggio, 'description': nomeViaggio + ' partenza il ' + date };
                    FB.ui({
                        method: 'stream.publish',
                        attachment: attachment,
                        user_message_prompt: 'inviato da BusBook'
                    });
                }
            </script>
        </p>
    </div>
    <div id="dialog">
    </div>
    <script type="text/javascript">
        var onCloseDialog;
        $(function () {
            $('#dialog').dialog(
                {
                    autoOpen: false,
                    modal: true,
                    buttons: {
                        "Ok": function () {
                            $(this).dialog("close");
                        }
                    }
                });
        });

        function OnSuccess(response, status, data) {
            window.location.href = '@(Url.Action("Detail", "Viaggio"))';
        }        

        function PubblicaError(response, status, error) {
            $('#dialog').html(response.statusText);
            $('#dialog').bind("dialogclose", function (event, ui) { });
            $('#dialog').dialog("open");
        }
    </script>
</div>
