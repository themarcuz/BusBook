@model Xlns.BusBook.Core.Model.Agenzia
@{
    if (Model.Id==0) 
    {
        ViewBag.Title = "Nuova agenzia";
    }
    else
    {
        ViewBag.Title = "Modifica agenzia";
    }
}
@section scripts{
    <script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
    <script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false"></script>
    <script src="@Url.Content("~/Content/scripts/agenzia.map.js")" type="text/javascript"></script>
}
<div id="content-wrapper" class="container_16">
    <div id="main" class="grid_16">
        <h3>
            @ViewBag.Title</h3>
        @using (Html.BeginForm("Save", "Agenzia", FormMethod.Post, new { id="salvaAgenziaForm" }))
        {
            @Html.ValidationSummary(true)
    
            <table>
                <tr>
                    <td>
                        <fieldset>
                            <legend>Agenzia</legend>
                            <br />
                            @Html.HiddenFor(model => model.Id)
                            <div >
                                @Html.LabelFor(model => model.Nome)
                            </div>
                            <div >
                                @Html.EditorFor(model => model.Nome)
                                @Html.ValidationMessageFor(model => model.Nome)
                            </div>
                            <div >
                                @Html.LabelFor(model => model.RagioneSociale)
                            </div>
                            <div >
                                @Html.EditorFor(model => model.RagioneSociale)
                                @Html.ValidationMessageFor(model => model.RagioneSociale)
                            </div>
                            <div >
                                @Html.LabelFor(model => model.PIva)
                            </div>
                            <div >
                                @Html.EditorFor(model => model.PIva)
                                @Html.ValidationMessageFor(model => model.PIva)
                            </div>
                            <div >
                                @Html.LabelFor(model => model.Email)
                            </div>
                            <div >
                                @Html.EditorFor(model => model.Email)
                                @Html.ValidationMessageFor(model => model.Email)
                            </div>
                            <div >
                                @Html.LabelFor(model => model.Telefono)
                            </div>
                            <div >
                                @Html.EditorFor(model => model.Telefono)
                                @Html.ValidationMessageFor(model => model.Telefono)
                            </div>
                            <div >
                                @Html.LabelFor(model => model.Fax)
                            </div>
                            <div >
                                @Html.EditorFor(model => model.Fax)
                                @Html.ValidationMessageFor(model => model.Fax)
                            </div>
                            <br />
                        </fieldset>
                    </td>
                    <td>
                        <fieldset>
                            <legend>Locazione geografica</legend>
                            <br />
                            <div >
                                @Html.LabelFor(model => model.Location.City)
                            </div>
                            <div >
                                @Html.TextBoxFor(model => model.Location.City, new { onblur = "refineLocation()" })
                                @Html.ValidationMessageFor(model => model.Location.City)
                            </div>
                            <div >
                                @Html.LabelFor(model => model.Location.Street)
                            </div>
                            <div >
                                @Html.TextBoxFor(model => model.Location.Street, new { onblur = "refineLocation()" })
                                @Html.ValidationMessageFor(model => model.Location.Street)
                            </div>
                            <div >
                                @Html.LabelFor(model => model.Location.Number)
                            </div>
                            <div >
                                @Html.TextBoxFor(model => model.Location.Number, new { onblur = "refineLocation()" })
                                @Html.ValidationMessageFor(model => model.Location.Number)
                            </div>
                            <div >
                                @Html.LabelFor(model => model.Location.CAP)
                            </div>
                            <div >
                                @Html.TextBoxFor(model => model.Location.CAP, new { onblur = "refineLocation()" })
                                @Html.ValidationMessageFor(model => model.Location.CAP)
                            </div>
                            <div >
                                @Html.LabelFor(model => model.Location.Province)
                            </div>
                            <div >
                                @Html.TextBoxFor(model => model.Location.Province, new { onblur = "refineLocation()" })
                                @Html.ValidationMessageFor(model => model.Location.Province)
                            </div>
                            <div >
                                @Html.LabelFor(model => model.Location.Region)
                            </div>
                            <div >
                                @Html.TextBoxFor(model => model.Location.Region, new { onblur = "refineLocation()" })
                                @Html.ValidationMessageFor(model => model.Location.Region)
                            </div>
                            <div >
                                @Html.LabelFor(model => model.Location.Nation)
                            </div>
                            <div >
                                @Html.TextBoxFor(model => model.Location.Nation, new { onblur = "refineLocation()" })
                                @Html.ValidationMessageFor(model => model.Location.Nation)
                            </div>
                            @Html.HiddenFor(model => model.Location.Lat)
                            @Html.HiddenFor(model => model.Location.Lng)                            
                            <br />
                        </fieldset>
                    </td>
                    <td>
                        <div >
                            Cerca indirizzo
                        </div>
                        <div >
                            <input type="text" id="searchAddressField" style="width: 200px" />
                            <input type="button" id="searchAddressButton" onclick="showLocation(searchAddressField.value, true);"
                                value="cerca" class="button"  />
                        </div>
                        <div style="height: 20px">
                            <span id="loaderMessage"></span>
                        </div>
                        <div id="map_canvas" style="width: 500px; height: 350px;">
                        </div>
                    </td>
                </tr>
            </table>
            
            <input type="button" value="Salva" id="submitButton" class="button" />
            <input type="button" value="Annulla" id="cancelButton" class="button" 
                    onclick="window.location='@Href("~/Agenzia/List")'" />
        }
    </div>
</div>
